#include <stdio.h>
#include <algorithm>

int n, A[101][101], cnt, size[101];


void input(){
		
	scanf("%d", &n);
	for(int i=0; i<n; i++){
		for(int j=0; j<n; j++){
			scanf("%d", &A[i][j]);
		}
	}
}

void output(){

	
	printf("%d \n",cnt);

	for(int i=0; i< cnt; i++){
	printf("%d\n ",size[i]);
	}
}
bool safe(int a, int b){
	return (0<=a && a<n) && (0<=b && b<n);
}

bool cmp(int a, int b){
	return a > b;
}
void dfs(int a, int b, int c){
	
	A[a][b] = c;
	
	if(safe(a+1, b)&& A[a+1][b]==1)
	   dfs(a+1,b,c);
	if(safe(a-1,b) && A[a-1][b]==1)
	   dfs(a-1,b,c);
	if(safe(a,b+1) && A[a][b+1]==1)
	   dfs(a,b+1,c);
	if(safe(a,b-1) && A[a][b-1]==1)
	   dfs(a,b-1,c);
}

void solve(){
	for(int i=0; i<n; i++)
		for(int j=0; j<n; j++)
			if(A[i][j]==1){
				cnt++;
				dfs(i,j,cnt+1);
			}
		
	for(int i=0; i<n; i++)
		for(int j=0; j <n; j++)
			if(A[i][j])
		    	size[A[i][j]-2]++;
		   	
	
	std::sort(size, size+cnt, cmp);
}



int main(){
	
	input();
	solve();
	output();
}
